<div align="center">

#### [목차 바로가기](https://github.com/dhslrl321/cqrs-journey-korean-ver/blob/master/Table%20of%20Contents.mdwn)

</div>

---

# 왜 Event Sourcing 을 사용해야 할까

지금까지, 이벤트 소싱을 도메인의 애그리거트와 관련된 이벤트의 완전한 이력 (complete history of the events) 을 저장한다는 사실이라는 것으로 설명했다.

accounting 이나 settlement (정산이나 회게와 같은) 어떤 도메인에서는 이벤트의 완전한 이력 (history of the events) 과 이벤트의 불변성 (immutable) 이 매우 중요한 기능이다.

트랜잭션이 발생한 후에는 삭제하거나 변경할 수 없지만 필요한 경우 수정 또는 삭제 (reversing) 트랜잭션을 일으킬 수도 있다.

아래의 리스트는 Event sourcing 을 사용하면 발생하는 추가적인 장점이다. 하지만 역시 중요한 것은 특정 도메인에 따라서 장점들이 다를 수 있다는 것이다.

- Performance
- Simplication
- Audit trail
- Integration with other subsystems
- events history 에서 추가적인 비즈니스 가치 도출
- production troubleshooting
- fixing errors
- testing
- flexibility

### Performance, 성능

이벤트는 불변하기 때문에 오로지 삽입 연산만 수행가능하다.

이벤트는 simple 하고 standalone object 인 사실 때문에 관계형 모델 저장 방식보다 더 나은 성능과 확장성을 가질 수 있다.

### Simplication, 단순화

이벤트는 과거에 시스템에서 일어난 사건을 기술하는 simple objects 이다.

이러한 event 를 saving 만 하기 때문에 object-relation 과 db 의 패러다임 불일치로 불리는 복잡성을 훨씬 단순화 할 수 있다. 즉, 도메인 객체의 불필요하게 복잡한 저장 과정을 단순화 할 수 있다.

### Audit trail, 감시 기록

이벤트는 불변하고 system 의 상태를 모두 저장한다.

그렇기 떄문에 시스템에서 발생한 모든 내용들을 audit 할 수 있다

### Integration with other subsystems

이벤트는 다른 subsystem 과 통신하는 좋은 수단이다.

event store 는 application 의 상태 변화에 관심있어 하는 또 다른 subsystem 에게 publish 할 수 있다.

### events history 에서 추가적인 비즈니스 가치 도출

이벤트를 저장함으로써 특정 시점의 이벤트들만 조회할 수 있기 떄문에 시스템의 특정 시점으로 되돌릴 수 있는 힘이 생겼다.

이것은 시스템에 대한 비즈니스의 역사를 대변하는 것이다. 

이벤트를 저장할 경우 미래에 가치가 있다고 판단될 수 있는 정보를 계속해서 갖게 되는 것이다

### production troubleshooting

이벤트 스토어를 사용해서 프로덕션 이벤트 저장소의 사본을 가져오고 테스트 환경에서 replay 하여 프로덕션 system 의 문제를 빠르게 해결하는데 도움이 된다.

프로덕션 시스템에서 문제가 발생한 시각을 알고 있으면 해당 시점까지의 이벤트 스트림을 replay 하여 정확히 무슨 일이 일어났는지도 관찰할 수 있다.

### fixing errors

시스템에서 잘못된 값을 계산하는 코딩 실수를 발견할 수 있다.

코딩 오류를 수정하고 저장된 데이터 항목에 대해서 새 버전의 코드를 기반으로 값을 올바르게 계산하도록 코드 오류를 수정하고 이벤트 스트림을 재생할 수 있다

### testing

애그리거트의 모든 상태 변경은 이벤트로 저장된다.

따라서 단순히 이벤트를 확인함으로써 어떤 command 가 특정 애그리거트에 영향을 미쳤는지 테스트할 수 있다.

### flexibility

일련의 이벤트를 통해서 특정 view 를 생성하는 것도 유연하게 가능하다

---

4장 CQRS and ES Deep Dive 에서 이러한 이점들에 대해서 자세히 다룬다.

